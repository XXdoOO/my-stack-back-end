<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xx.mapper.BlogMapper">
    <sql id="isRecord">
        <if test="userId != null">
            ,
            if(count(distinct case when r.blog_id = b.id and r.type = 0 then r.id end) = 1, 1, 0) as is_up,
            if(count(distinct case when r.blog_id = b.id and r.type = 1 then r.id end) = 1, 1, 0) as is_down,
            if(count(distinct case when r.blog_id = b.id and r.type = 2 then r.id end) = 1, 1, 0) as is_star
        </if>
        <if test="userId == null">
            ,
            0 as is_up,
            0 as is_down,
            0 as is_star
        </if>
    </sql>

    <select id="getBlogList" resultMap="BlogView">
        select
        b.id,
        b.title,
        b.description,
        b.cover,
        b.view,
        count(distinct case when r.type = 0 then r.id end) as up,
        count(distinct case when r.type = 1 then r.id end) as down,
        count(distinct case when r.type = 2 then r.id end) as star,
        b.status,
        b.create_time,
        b.create_by,
        u.nickname as author_nickname
        <include refid="isRecord"/>
        from blog b left join user u on u.id = b.create_by
        left join record r on r.is_deleted = 0 and r.blog_id is not null
        <if test="createBy != null and (type == 0 or type == 1 or (userId != null and userId == createBy and (type == 4 or type == 5)))">
            and b.id = r.blog_id
        </if>
        <if test="createBy == null or (createBy != null and (type == null or (userId != null and userId == createBy and (type == 2 or type == 3))))">
            and b.create_by = r.create_by
        </if>
        <where>
            b.is_deleted = 0
            <if test="keywords != null and keywords != ''">
                and (b.title like concat('%', #{keywords}, '%')
                or b.description like concat('%', #{keywords}, '%')
                or b.content like concat('%', #{keywords}, '%'))
            </if>

            <if test="createBy != null">
                <if test="type == null">
                    and b.status = 1 and b.create_by = #{createBy}
                </if>
                <if test="type == 0">
                    and r.type = 0 and r.create_by = #{createBy}
                </if>
                <if test="type == 1">
                    and r.type = 1 and r.create_by = #{createBy}
                </if>
                <if test="userId != null and userId == createBy">
                    <if test="type == 2">
                        and b.status = 0 and b.create_by = #{createBy}
                    </if>
                    <if test="type == 3">
                        and b.status = 2 and b.create_by = #{createBy}
                    </if>
                    <if test="type == 4">
                        and r.type = 2 and r.create_by = #{createBy}
                    </if>
                    <if test="type == 5">
                        and r.type = 3 and r.create_by = #{createBy}
                    </if>
                </if>
            </if>
            <if test="createBy == null">
                and b.status = 1
            </if>
        </where>
        group by b.id
    </select>
    <select id="getBlogList2" resultMap="BlogView">
        select
        b.id,
        b.title,
        b.description,
        b.cover,
        count(distinct case when r.type = 0 then r.id end) as up,
        count(distinct case when r.type = 1 then r.id end) as down,
        count(distinct case when r.type = 2 then r.id end) as star,
        count(distinct case when r.type = 3 then r.id end) + b.view as view,
        b.status,
        b.create_time,
        b.create_by,
        u.nickname as author_nickname
        <include refid="isRecord"/>
        from blog b left join user u on u.id = b.create_by
        left join record r on r.is_deleted = 0 and r.blog_id is not null
        and b.create_by = r.create_by
        <where>
            <if test="title != null and title != ''">
                and b.title like concat('%', #{title}, '%')
            </if>
            <if test="description != null and description != ''">
                and b.description like concat('%', #{description}, '%')
            </if>
            <if test="authorNickname != null and authorNickname != ''">
                and u.nickname like concat('%', #{authorNickname}, '%')
            </if>
            <if test="status != null">
                and b.status = #{status}
            </if>
        </where>
        group by b.id
    </select>
    <resultMap id="BlogView" type="BlogViewVo">
        <id column="id" property="id"/>
        <collection property="categories" column="id" ofType="Category" select="getCategories">
        </collection>
    </resultMap>
    <select id="getCategories" resultType="CategoryVo">
        select c.id as id, c.name as name
        from category c,
             blog_category bc
        where c.id = bc.category_id
          and bc.blog_id = #{id}
    </select>

    <select id="getBlogDetails" resultMap="BlogDetails">
        select b.id,
        b.title,
        b.description,
        b.cover,
        b.content,
        b.ip,
        b.ip_territory,
        count(distinct case when r.type = 0 then r.id end) as up,
        count(distinct case when r.type = 1 then r.id end) as down,
        count(distinct case when r.type = 3 then r.id end) + b.view as view,
        b.status,
        b.create_time,
        u.id as u_id,
        u.nickname as u_nickname,
        u.avatar as u_avatar,
        u.is_admin as u_is_admin,
        u.is_enabled as u_is_enabled,
        u.create_time as u_create_time,
        (select count(r.id) from record r where r.create_by = b.create_by and r.blog_id is not null and r.type = 0) as
        up_count,
        (select count(r.id) from record r where r.create_by = b.create_by and r.blog_id is not null and r.type = 1) as
        down_count,
        (select count(blog.id) from blog where blog.create_by = b.create_by and blog.status = 1 and blog.is_deleted =
        false) as pass_count
        <include refid="isRecord"/>
        from blog b
        left join user u on b.create_by = u.id
        left join record r on r.is_deleted = 0 and r.blog_id is not null and b.id = r.blog_id
        where b.id = #{id}
    </select>
    <resultMap id="BlogDetails" type="BlogVo">
        <id column="id" property="id"/>
        <association property="authorInfo">
            <id column="u_id" property="id"/>
            <result column="u_nickname" property="nickname"/>
            <result column="u_avatar" property="avatar"/>
            <result column="up_count" property="up"/>
            <result column="down_count" property="down"/>
            <result column="pass_count" property="passCount"/>
            <result column="u_is_admin" property="admin"/>
            <result column="u_is_disable" property="disable"/>
            <result column="u_create_time" property="createTime"/>
        </association>
        <collection property="categories" column="id" ofType="CategoryVo" select="getCategories">
        </collection>
    </resultMap>
    <select id="getBlogDetails2" resultMap="BlogDetails">
        select content
        from blog
        where id = #{id}
    </select>
</mapper>